<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.bsfit.frms.policy.mapper.RisksMapper" >
  <resultMap id="BaseResultMap" type="cn.com.bsfit.frms.policy.pojo.Risks" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="ARCHIVES_ID" property="archivesId" jdbcType="DECIMAL" />
    <result column="RULE_NAME" property="ruleName" jdbcType="VARCHAR" />
    <result column="SCORE" property="score" jdbcType="DECIMAL" />
    <result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
    <result column="RULE_PACKAGE_NAME" property="rulePackageName" jdbcType="VARCHAR" />
    <result column="RULE_ID" property="ruleId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ARCHIVES_ID, RULE_NAME, SCORE, COMMENTS, RULE_PACKAGE_NAME, RULE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.bsfit.frms.policy.pojo.RisksExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from RISKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from RISKS
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from RISKS
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.bsfit.frms.policy.pojo.RisksExample" >
    delete from RISKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.bsfit.frms.policy.pojo.Risks" >
    insert into RISKS (ID, ARCHIVES_ID, RULE_NAME, 
      SCORE, COMMENTS, RULE_PACKAGE_NAME, 
      RULE_ID)
    values (#{id,jdbcType=BIGINT}, #{archivesId,jdbcType=DECIMAL}, #{ruleName,jdbcType=VARCHAR}, 
      #{score,jdbcType=DECIMAL}, #{comments,jdbcType=VARCHAR}, #{rulePackageName,jdbcType=VARCHAR}, 
      #{ruleId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bsfit.frms.policy.pojo.Risks" >
    insert into RISKS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="archivesId != null" >
        ARCHIVES_ID,
      </if>
      <if test="ruleName != null" >
        RULE_NAME,
      </if>
      <if test="score != null" >
        SCORE,
      </if>
      <if test="comments != null" >
        COMMENTS,
      </if>
      <if test="rulePackageName != null" >
        RULE_PACKAGE_NAME,
      </if>
      <if test="ruleId != null" >
        RULE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="archivesId != null" >
        #{archivesId,jdbcType=DECIMAL},
      </if>
      <if test="ruleName != null" >
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="rulePackageName != null" >
        #{rulePackageName,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.bsfit.frms.policy.pojo.RisksExample" resultType="java.lang.Integer" >
    select count(*) from RISKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update RISKS
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.archivesId != null" >
        ARCHIVES_ID = #{record.archivesId,jdbcType=DECIMAL},
      </if>
      <if test="record.ruleName != null" >
        RULE_NAME = #{record.ruleName,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        SCORE = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.comments != null" >
        COMMENTS = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.rulePackageName != null" >
        RULE_PACKAGE_NAME = #{record.rulePackageName,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleId != null" >
        RULE_ID = #{record.ruleId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update RISKS
    set ID = #{record.id,jdbcType=BIGINT},
      ARCHIVES_ID = #{record.archivesId,jdbcType=DECIMAL},
      RULE_NAME = #{record.ruleName,jdbcType=VARCHAR},
      SCORE = #{record.score,jdbcType=DECIMAL},
      COMMENTS = #{record.comments,jdbcType=VARCHAR},
      RULE_PACKAGE_NAME = #{record.rulePackageName,jdbcType=VARCHAR},
      RULE_ID = #{record.ruleId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.bsfit.frms.policy.pojo.Risks" >
    update RISKS
    <set >
      <if test="archivesId != null" >
        ARCHIVES_ID = #{archivesId,jdbcType=DECIMAL},
      </if>
      <if test="ruleName != null" >
        RULE_NAME = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        SCORE = #{score,jdbcType=DECIMAL},
      </if>
      <if test="comments != null" >
        COMMENTS = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="rulePackageName != null" >
        RULE_PACKAGE_NAME = #{rulePackageName,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null" >
        RULE_ID = #{ruleId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.bsfit.frms.policy.pojo.Risks" >
    update RISKS
    set ARCHIVES_ID = #{archivesId,jdbcType=DECIMAL},
      RULE_NAME = #{ruleName,jdbcType=VARCHAR},
      SCORE = #{score,jdbcType=DECIMAL},
      COMMENTS = #{comments,jdbcType=VARCHAR},
      RULE_PACKAGE_NAME = #{rulePackageName,jdbcType=VARCHAR},
      RULE_ID = #{ruleId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>